name: GitHub Actions Pipeline
run-name: ${{ github.actor }} started the pipeline 🚀
on: [push]
jobs:
  Test:
    runs-on: ubuntu-latest
    steps:
      - run: echo "🎉 The job was automatically triggered by a ${{ github.event_name }} event."
      - run: echo "🐧 This job is now running on a ${{ runner.os }} server hosted by GitHub!"
      - run: echo "🔎 The name of your branch is ${{ github.ref }} and your repository is ${{ github.repository }}."
      
      - name: Check out repository code
        uses: actions/checkout@v4
        
      - name: Install ESLint
        run: npm install eslint --save-dev

      - name: Initialize ESLint config
        run: npm init @eslint/config --yes

  Build:
    runs-on: ubuntu-latest
    needs: Test
    steps:

      - name: Check out repository code
        uses: actions/checkout@v4

      - name: Install dependencies
        run: npm install

      - name: Build web app
        run: npm run build

      - name: Build Docker image
        run: |
          docker build -t alonsaban/simple-js-project:latest .
  
  Delivery:
    runs-on: ubuntu-latest
    needs: Build
    steps:
      - name: Log in to Docker Hub
        run: echo "${{ secrets.DOCKER_PASSWORD }}" | docker login -u "${{ secrets.DOCKER_USERNAME }}" --password-stdin

      - name: Push Docker image
        run: docker push alonsaban/simple-js-project:latest

      uses: docker/build-push-action@v5
      with:
        push: true
        tags: alonsaban/simple-js-project:latest
        context: .
        file: ./Dockerfile
        
      - run: echo "💡 The ${{ github.repository }} repository has been cloned to the runner."
      - run: echo "🖥️ The workflow is now ready to test your code on the runner."
      
      - name: List files in the repository
        run: |
          ls ${{ github.workspace }}
      - run: echo "🍏 This job's status is ${{ job.status }}."

